services:
  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: transit-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log
    networks:
      - transit-network
    restart: unless-stopped

  # Kafka broker
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: transit-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - transit-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Kafka UI for monitoring (optional)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: transit-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - transit-network
    restart: unless-stopped

  # Data Ingestion Service
  data-ingestion-service:
    build:
      context: .
      dockerfile: data-ingestion-service/Dockerfile
    container_name: transit-data-ingestion
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_API_KEY: ""  # Not needed for local Kafka
      KAFKA_API_SECRET: ""  # Not needed for local Kafka
      TRANSLINK_API_KEY: "${TRANSLINK_API_KEY}"  # Set this in .env file
      POLLING_ENABLED: "true"
      POLLING_INTERVAL_SECONDS: "30"
      JAVA_OPTS: "-Xmx1g -Xms512m -server"
      SPRING_PROFILES_ACTIVE: "local"
    networks:
      - transit-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Transit Tracker Service
  transit-tracker-service:
    build:
      context: .
      dockerfile: transit-tracker-service/Dockerfile
    container_name: transit-tracker
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8082:8082"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_API_KEY: ""  # Not needed for local Kafka
      KAFKA_API_SECRET: ""  # Not needed for local Kafka
      JAVA_OPTS: "-Xmx2g -Xms1g -server"
      SPRING_PROFILES_ACTIVE: "local"
    volumes:
      - ./google_transit.zip:/app/data/google_transit.zip:ro
    networks:
      - transit-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

volumes:
  zookeeper-data:
    driver: local
  zookeeper-logs:
    driver: local
  kafka-data:
    driver: local

networks:
  transit-network:
    driver: bridge
    name: transit-network