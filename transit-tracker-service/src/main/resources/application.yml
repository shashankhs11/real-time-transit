server:
  port: 8082

spring:
  application:
    name: transit-tracker-service

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: transit-tracker-group
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
      properties:
        enable.auto.commit: true
        auto.commit.interval.ms: 1000

  # Email Configuration for Feedback
  mail:
    host: ${SMTP_HOST:smtp.gmail.com}
    port: ${SMTP_PORT:587}
    username: ${SMTP_USERNAME}
    password: ${SMTP_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          connectiontimeout: 5000
          timeout: 3000
          writetimeout: 5000


# Kafka Topic Configuration
kafka:
  topics:
    vehicle-positions: vehicle-positions

# WebSocket Configuration
websocket:
  endpoint: /ws
  allowed-origins: "*"

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# Feedback Email Settings
feedback:
  email:
    to: ${FEEDBACK_EMAIL_TO}
    from: ${FEEDBACK_EMAIL_FROM}
    subject: "New Feedback - Real-Time Transit App"

# Logging Configuration
logging:
  level:
    com.bustracker.tracker: INFO
    org.springframework.kafka: WARN
    org.apache.kafka: WARN
    org.springframework.web.socket: INFO
    org.springframework.mail: INFO
    root: INFO
  pattern:
    console: "%d{HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"